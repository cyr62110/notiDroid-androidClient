apply plugin: 'android'
apply plugin: 'android-apt'

apt {
    arguments {
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName 'fr.cvlaminck.notidroid.android.base'

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

dependencies {
    apt 'org.androidannotations:androidannotations:3.0.1'
    compile 'org.androidannotations:androidannotations-api:3.0.1'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
    compile 'de.undercouch:bson4jackson:2.4.0'

    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'org.springframework.android:spring-android-core:1.0.1.RELEASE'

    compile 'com.android.support:support-v4:20.+'
    compile 'com.android.support:support-v13:20.+'

    compile 'org.apache.commons:commons-lang3:3.3.2'

    compile 'org.eclipse.paho:mqtt-client:0.4.0'

    compile group: 'fr.cvlaminck.notidroid', name: 'cloud-client-java-api', version: '+', changing: true

    //IDEA annotations used to run static code analyses
    compile 'com.intellij:annotations:12.0'

    compile project(':theme')
    compile project(':service-api')
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"
    enforceUniquePackageName = false

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


